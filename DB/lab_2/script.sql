-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Н_ТИПЫ_ВЕДОМОСТЕЙ, Н_ВЕДОМОСТИ.
-- Вывести атрибуты: Н_ТИПЫ_ВЕДОМОСТЕЙ.НАИМЕНОВАНИЕ, Н_ВЕДОМОСТИ.ЧЛВК_ИД.
-- Фильтры (AND):
-- a) Н_ТИПЫ_ВЕДОМОСТЕЙ.НАИМЕНОВАНИЕ < Перезачет.
-- b) Н_ВЕДОМОСТИ.ИД = 1250981.
-- Вид соединения: RIGHT JOIN.

SELECT "Н_ТИПЫ_ВЕДОМОСТЕЙ"."НАИМЕНОВАНИЕ", "Н_ВЕДОМОСТИ"."ЧЛВК_ИД"
FROM "Н_ВЕДОМОСТИ"
         RIGHT JOIN "Н_ТИПЫ_ВЕДОМОСТЕЙ" ON "Н_ВЕДОМОСТИ"."ВЕД_ИД" = "Н_ТИПЫ_ВЕДОМОСТЕЙ"."ИД"
WHERE "Н_ТИПЫ_ВЕДОМОСТЕЙ"."НАИМЕНОВАНИЕ" < 'Перезачет'
  AND "Н_ВЕДОМОСТИ"."ИД" = 1250981;

-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_ОБУЧЕНИЯ, Н_УЧЕНИКИ.
-- Вывести атрибуты: Н_ЛЮДИ.ИД, Н_ОБУЧЕНИЯ.НЗК, Н_УЧЕНИКИ.ГРУППА.
-- Фильтры: (AND)
-- a) Н_ЛЮДИ.ИД = 142095.
-- b) Н_ОБУЧЕНИЯ.ЧЛВК_ИД = 112514.
-- c) Н_УЧЕНИКИ.ГРУППА = 4100.
-- Вид соединения: RIGHT JOIN.

SELECT "Н_ЛЮДИ"."ИД", "Н_ОБУЧЕНИЯ"."НЗК", "Н_УЧЕНИКИ"."ГРУППА"
FROM "Н_ОБУЧЕНИЯ"
         RIGHT JOIN "Н_ЛЮДИ" ON "Н_ОБУЧЕНИЯ"."ЧЛВК_ИД" = "Н_ЛЮДИ"."ИД"
         RIGHT JOIN "Н_УЧЕНИКИ" ON "Н_ОБУЧЕНИЯ"."ЧЛВК_ИД" = "Н_УЧЕНИКИ"."ЧЛВК_ИД"
WHERE "Н_ЛЮДИ"."ИД" = 142095
  AND "Н_ОБУЧЕНИЯ"."ЧЛВК_ИД" = 112514
  AND "Н_УЧЕНИКИ"."ГРУППА" = '4100';


-- Вывести число дней без учета повторений.
-- При составлении запроса нельзя использовать DISTINCT.

SELECT COUNT("ДАТА")
FROM (SELECT ("Н_ПЛАНЫ"."ДАТА_УТВЕРЖДЕНИЯ"::timestamp::date) AS "ДАТА"
      FROM "Н_ПЛАНЫ"
      GROUP BY "Н_ПЛАНЫ"."ДАТА_УТВЕРЖДЕНИЯ"::timestamp::date)
         AS "Число дней без учета повторений";


-- Найти группы, в которых в 2011 году было ровно 5 обучающихся студентов на ФКТИУ.
-- Для реализации использовать подзапрос.

SELECT DISTINCT "ГРУППЫ_2011"."ГРУППА"
FROM (SELECT "Н_УЧЕНИКИ"."ГРУППА", COUNT("Н_УЧЕНИКИ"."ИД") AS "КОЛИЧЕСТВО"
      FROM "Н_УЧЕНИКИ"
      WHERE "Н_УЧЕНИКИ"."НАЧАЛО" < '2011-01-01'::date
        AND "Н_УЧЕНИКИ"."КОНЕЦ" > '2011-12-30'::date
      GROUP BY "Н_УЧЕНИКИ"."ГРУППА") AS "ГРУППЫ_2011"
         RIGHT JOIN "Н_ГРУППЫ_ПЛАНОВ" ON "Н_ГРУППЫ_ПЛАНОВ"."ГРУППА" = "ГРУППЫ_2011"."ГРУППА"
         RIGHT JOIN "Н_ПЛАНЫ" ON "Н_ГРУППЫ_ПЛАНОВ"."ПЛАН_ИД" = "Н_ПЛАНЫ"."ИД"
WHERE "ГРУППЫ_2011"."КОЛИЧЕСТВО" = 5
  AND "Н_ПЛАНЫ"."ОТД_ИД" = (SELECT "Н_ОТДЕЛЫ"."ИД"
                            FROM "Н_ОТДЕЛЫ"
                            WHERE "Н_ОТДЕЛЫ"."КОРОТКОЕ_ИМЯ" = 'КТиУ');

-- Выведите таблицу со средними оценками студентов группы 4100 (Номер, ФИО, Ср_оценка), у которых средняя оценка не больше средней оценк(е|и) в группе 3100.


SELECT "Н_ВЕДОМОСТИ"."ЧЛВК_ИД",
       AVG(CASE
               WHEN ("ОЦЕНКА" <> 'зачет' AND "ОЦЕНКА" <> 'осв' AND "ОЦЕНКА" <> 'незач' AND "ОЦЕНКА" <> 'неявка')
                   THEN CAST("ОЦЕНКА" AS INTEGER) END) AS "СР_ОЦЕНКА",
       "Н_ЛЮДИ"."ФАМИЛИЯ",
       "Н_ЛЮДИ"."ИМЯ",
       "Н_ЛЮДИ"."ОТЧЕСТВО"
FROM "Н_ВЕДОМОСТИ"
         JOIN "Н_УЧЕНИКИ" ON "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ВЕДОМОСТИ"."ЧЛВК_ИД"
         JOIN "Н_ЛЮДИ" ON "Н_ВЕДОМОСТИ"."ЧЛВК_ИД" = "Н_ЛЮДИ"."ИД"
WHERE "ГРУППА" = '4100'
GROUP BY "Н_ВЕДОМОСТИ"."ЧЛВК_ИД", "ФАМИЛИЯ", "ИМЯ", "ОТЧЕСТВО"
HAVING AVG(CASE
               WHEN ("ОЦЕНКА" <> 'зачет'
                   AND "ОЦЕНКА" <> 'осв'
                   AND "ОЦЕНКА" <> 'незач'
                   AND "ОЦЕНКА" <> 'неявка')
                   THEN CAST("ОЦЕНКА" AS INTEGER)
    END) <= (SELECT AVG("ОЦЕНКИ_3100"."СРЕДНИЕ")
             FROM (SELECT AVG(CASE
                                  WHEN ("Н_ВЕДОМОСТИ"."ОЦЕНКА" <> 'зачет' AND
                                        "Н_ВЕДОМОСТИ"."ОЦЕНКА" <> 'осв' AND
                                        "Н_ВЕДОМОСТИ"."ОЦЕНКА" <> 'незач' AND
                                        "Н_ВЕДОМОСТИ"."ОЦЕНКА" <> 'неявка')
                                      THEN CAST("ОЦЕНКА" AS INTEGER) END) AS "СРЕДНИЕ"
                   FROM "Н_УЧЕНИКИ"
                            RIGHT JOIN "Н_ВЕДОМОСТИ" ON "Н_ВЕДОМОСТИ"."ЧЛВК_ИД" = "Н_УЧЕНИКИ"."ЧЛВК_ИД"
                   WHERE "Н_УЧЕНИКИ"."ГРУППА" = '3100'
                   GROUP BY "Н_УЧЕНИКИ"."ЧЛВК_ИД") AS "ОЦЕНКИ_3100");

-- Получить список студентов, отчисленных ровно первого сентября 2012 года с очной или заочной формы обучения. В результат включить:
-- номер группы;
-- номер, фамилию, имя и отчество студента;
-- номер пункта приказа;
-- Для реализации использовать подзапрос с IN.


SELECT "Н_УЧЕНИКИ"."ГРУППА",
       "Н_УЧЕНИКИ"."ИД",
       "Н_ЛЮДИ"."ФАМИЛИЯ",
       "Н_ЛЮДИ"."ИМЯ",
       "Н_ЛЮДИ"."ОТЧЕСТВО",
       "Н_УЧЕНИКИ"."П_ПРКОК_ИД"
FROM "Н_УЧЕНИКИ" 
         JOIN "Н_ЛЮДИ" ON "Н_ЛЮДИ"."ИД" = "Н_УЧЕНИКИ"."ЧЛВК_ИД"
         JOIN "Н_ПЛАНЫ" ON "Н_УЧЕНИКИ"."ПЛАН_ИД" = "Н_ПЛАНЫ"."ИД"
         JOIN "Н_ФОРМЫ_ОБУЧЕНИЯ" ON "Н_ПЛАНЫ"."ФО_ИД" = "Н_ФОРМЫ_ОБУЧЕНИЯ"."ИД"
WHERE ("Н_ФОРМЫ_ОБУЧЕНИЯ"."НАИМЕНОВАНИЕ" = 'Заочная' OR "Н_ФОРМЫ_ОБУЧЕНИЯ"."НАИМЕНОВАНИЕ" = 'Очная')
  AND "Н_УЧЕНИКИ"."ИД" in (SELECT "Н_УЧЕНИКИ"."ИД"
                           FROM "Н_УЧЕНИКИ"
                           WHERE "Н_УЧЕНИКИ"."ПРИЗНАК" = 'отчисл'
                             AND "Н_УЧЕНИКИ"."СОСТОЯНИЕ" = 'утвержден'
                             AND DATE("Н_УЧЕНИКИ"."КОНЕЦ") = '2012-09-01');

-- Вывести список людей, не являющихся или не являвшихся студентами ФКТИУ (данные, о которых отсутствуют в таблице Н_УЧЕНИКИ).
-- В запросе нельзя использовать DISTINCT


SELECT "Н_ЛЮДИ"."ИД",
       "Н_ЛЮДИ"."ФАМИЛИЯ",
       "Н_ЛЮДИ"."ИМЯ",
       "Н_ЛЮДИ"."ОТЧЕСТВО"
FROM "Н_ЛЮДИ"
WHERE NOT EXISTS (SELECT *
                  FROM "Н_УЧЕНИКИ"
                           JOIN "Н_ПЛАНЫ" ON "Н_УЧЕНИКИ"."ПЛАН_ИД" = "Н_ПЛАНЫ"."ИД"
                           JOIN "Н_ОТДЕЛЫ" ON "Н_ПЛАНЫ"."ОТД_ИД" = "Н_ОТДЕЛЫ"."ИД"
                  WHERE "Н_ОТДЕЛЫ"."КОРОТКОЕ_ИМЯ" = 'КТиУ'
                    AND "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ЛЮДИ"."ИД");


SELECT "Н_ЛЮДИ"."ИД",
       "Н_ЛЮДИ"."ФАМИЛИЯ",
       "Н_ЛЮДИ"."ИМЯ",
       "Н_ЛЮДИ"."ОТЧЕСТВО"
FROM "Н_ЛЮДИ"
WHERE "Н_ЛЮДИ"."ИД" NOT IN (SELECT "Н_УЧЕНИКИ"."ЧЛВК_ИД" 
                  FROM "Н_УЧЕНИКИ"
                           JOIN "Н_ПЛАНЫ" ON "Н_УЧЕНИКИ"."ПЛАН_ИД" = "Н_ПЛАНЫ"."ИД"
                           JOIN "Н_ОТДЕЛЫ" ON "Н_ПЛАНЫ"."ОТД_ИД" = "Н_ОТДЕЛЫ"."ИД"
                  WHERE "Н_ОТДЕЛЫ"."КОРОТКОЕ_ИМЯ" = 'КТиУ');

